// ===============================================================================
// CONFIGURATION PROFILE FOR BELUGA HPC CLUSTER
// ===============================================================================
// This configuration is specific to the Compute Canada (Alliance) HPC system.
// It defines the necessary parameters to run Nextflow on Beluga.
// ===============================================================================

params.config_profile_description = 'Alliance Beluga HPC config'  // Profile description
params.config_profile_contact = 'https://docs.alliancecan.ca/wiki/Technical_support'  // Technical support link
params.config_profile_url = 'docs.alliancecan.ca/wiki/Nextflow'  // Nextflow documentation for Alliance

// ===============================================================================
// GLOBAL PROCESS CONFIGURATION
// ===============================================================================
// Defines default parameters for all pipeline processes
// ===============================================================================

process {
  executor = 'slurm' 
  clusterOptions = '--account=rrg-xroucou'
  maxRetries = 3
  errorStrategy = { task.exitStatus in [125,137,139] ? 'retry' : 'finish' }
  memory = { check_max( 80.GB * task.attempt, 'memory' ) }  // Direct multiplication by task.attempt
  cpu = 5  
  time = '24h' 
}

// ===============================================================================
// EXECUTOR CONFIGURATION
// ===============================================================================
// Controls how Nextflow interacts with the task manager (SLURM)
// ===============================================================================

executor {
  pollInterval = '60 sec'
  submitRateLimit = '60/1min'
  queueSize = 100 
}

// ===============================================================================
// EXECUTION PROFILES
// ===============================================================================
// Defines preset configurations that can be activated with -profile
// ===============================================================================

profiles {
  beluga {  // Specific profile for jobs requiring more resources on Beluga
    max_memory='186G'  // Maximum memory per job in this profile
    max_cpu= 60  // Maximum CPUs per job
    max_time='168h'  // Maximum execution time (1 week)
  }
}


// ===============================================================================
// PATHS USED IN THE PIPELINE
// ===============================================================================
// Paths to RNA FASTA files to filter (snRNA, snoRNA, rRNA) by species
// Paths to complete genomes and annotations for STAR alignmen
// false = species is not configured/supported
// ===============================================================================

// pipline directory
params.path_pipeline_directory = '/path/to/pipeline/directory'  // Path to the pipeline directory
params.reference_files_directory = "${params.path_pipeline_directory}/reference"  // Directory for reference files

// rRNA FASTA files for Bowtie - filtering non-coding and ribosomal RNAs
params.path_rrna_HS = "${params.path_pipeline_directory}/fasta_files/snRNA_snoRNA_rRNA_HS_ensembl113.fasta"  // Homo sapiens (human)

params.rrna_filter = [
  'HS': "${params.reference_files_directory}/HHS/rrna-filter.fasta",
  'CE': "${params.reference_files_directory}/CE/rrna_filter.fasta",
  'DM': "${params.reference_files_directory}/DM/rrna_filter.fasta",
  'SC': "${params.reference_files_directory}/SC/rrna_filter.fasta",
  'DR': "${params.reference_files_directory}/DR/rrna_filter.fasta",
  'SM': "${params.reference_files_directory}/SM/rrna_filter.fasta"
]

params.genome_fastas = [
    'HS': "${params.reference_files_directory}/reference/HS/HS_genome.fasta",
    'CE': "${params.reference_files_directory}/reference/CE/CE_genome.fasta",
    'DM': "${params.reference_files_directory}/reference/DM/DM_genome.fasta",
    'SC': "${params.reference_files_directory}/reference/SC/SC_genome.fasta",
    'DR': "${params.reference_files_directory}/reference/DR/DR_genome.fasta",
    'SM': "${params.reference_files_directory}/reference/SM/SM_genome.fasta"
]
params.GTFs = [
    'HS': "${params.pipeline_dir}/reference/HS/HS_GTF.gtf",
    'CE': "${params.pipeline_dir}/reference/CE/CE_GTF.gtf",
    'DM': "${params.pipeline_dir}/reference/DM/DM_GTF.gtf",
    'SC': "${params.pipeline_dir}/reference/SC/SC_GTF.gtf",
    'DR': "${params.pipeline_dir}/reference/DR/DR_GTF.gtf",
    'SM': "${params.pipeline_dir}/reference/SM/SM_GTF.gtf"
]


// Parameter for multiqc 
params.multiqc_config = "${params.path_pipeline_directory}/riboseq_nextflow_pipeline/config_multiqc.yaml"

